## Credential Schema Protocol ## {#sctn-credential-schema-protocol}

Formalizes messages used to publish Credential Schemas, and further operations on it such as update, search and archival.

<table class="data longlastcol">
  <thead>
    <th>Title</th>
    <th>Description</th>
  </thead>
  <tbody>
  <tr>
    <td nowrap><strong>Protocol Name & Version</strong></td>
    <td>`credential-schema`, `1.0`</td>
  </tr>
    <tr>
      <td nowrap><strong>Motivation</strong></td>
      <td>
        Need a standard way to manage publishing and other activities of Verifiable Credential Schemas in the ADIA Ecosystem.
        There are other operations related to access control on the Schemas, which may be baked into this protocol, as and when needed.
      </td>
    </tr>
  </tbody>
</table>


### Implemented By
* Issuer Agent
* DAS Agent
* ARD Agent

### Roles
To Be Defined

### Protocol Commands

#### publish (ADIA-CS-001)

<strong>Request</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/publish",
  "@id": "<uuid-public-schema-12345>",
  "adia": {
    "attributes": {
      "entityType": "{ ISSUER | DAS | ARD }",
      "entityId": "{ ISSUER_ID | DAS_ID | ARD_ID }",
      "digitalAddress": "{ENTITY_DA}",
      "schemaDetails": {
        "name": "Person",
        "description": "<description of schema>",
        "version": "1.0",
        "schemaAttributes": [{
            "id": 1,
            "name": "First Name",
            "title": "FName"
            "datatype": "string",
            "description": "<some description>",
            "orderValue": 0
          },
          {
            "id": 2,
            "name": "Last Name",
            "title": "LName"
            "datatype": "string",
            "description": "<some description>",
            "orderValue": 1
          }]
      }
    }
  }
}
```

<strong>Response</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/publish-response",
  "@id": "<uuid-public-cred-response>",
  "status": "{ OK | FAILED | PENDING }",
  "comment": "Schema Published",
  "~thread": {
    "thid": "<uuid-public-schema-12345>",
    "message": "e.g. comment or reason of failed request"
  },
  "adia": {
    "schemaId": "abcd123456",
    "published": true,
    "publishedBy": "{ ISSUER_ID | DAS_ID | ARD_ID }",
    "publishedDate": "ISO 8601 format",
    "schemaLedgerId": "<Ledger id of the schema from DLT>",
  }
}
```

#### update (ADIA-CS-002)

<strong>Request</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/update",
  "@id": "<uuid-update-schema-12345>",
  "adia": {
    "attributes": {
      "entityType": "{ ISSUER | DAS | ARD }",
      "entityId": "{ ISSUER_ID | DAS_ID | ARD_ID }",
      "digitalAddress": "{ENTITY_DA}",
      "schemaDetails": {
        "schemaId": "abcd123456",
        "description": "<description of schema>",
        "version": "1.1",
        "schemaAttributes": [{
            "id": 3,
            "name": "Email ID",
            "title": "Email"
            "datatype": "string",
            "description": "<some description>",
            "orderValue": 3
        }]
      }
    }
  }
}
```

<strong>Response</strong>

```json
{
    "@type": "https://adiassociation.org/credential-schema/1.0/update-response",
    "@id": "<uuid-update-schema-response>",
    "status": "{ OK | FAILED | PENDING }",
    "comment": "Schema updated",
    "~thread": {
      "thid": "<uuid-update-schema-12345>",
      "message": "e.g. comment or reason of failed request"
    },
    "adia": {
      "schemaId": "abcd123456",
      "published": true,
      "publishedBy": "{ ISSUER_ID | DAS_ID | ARD_ID }",
      "publishedDate": "ISO 8601 format",
      "schemaLedgerId": "<Ledger id of the schema from DLT>",
    }
}
```

#### search (ADIA-CS-003)

<strong>Request</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/search",
  "@id": "<uuid-search-schema-12345>",
  "adia": {
    "attributes": {
      "entityType": "{ ISSUER | DAS | ARD }",
      "entityId": "{ ISSUER_ID | DAS_ID | ARD_ID }",
      "digitalAddress": "{ENTITY_DA}",
      "schemaDetails": {
        "name": "Person",
        "description": "<description of schema>",
        "version": "1.0"
      }
    }
  }
}
```

<strong>Response</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/search-response",
  "@id": "<uuid-search-schema-response>",
  "status": "{ OK | FAILED | PENDING }",
  "~thread": {
    "thid": "<uuid-search-schema-12345>",
    "message": "e.g. comment or reason of failed request"
  },
  "searchResult": [{
    "name": "Person",
    "description": "<description of schema>",
    "version": "1.0",
    "schemaAttributes": [{
        "id": 1,
        "name": "First Name",
        "title": "FName"
        "datatype": "string",
        "description": "<some description>",
        "orderValue": 0
      },
      {
        "id": 2,
        "name": "Last Name",
        "title": "LName"
        "datatype": "string",
        "description": "<some description>",
        "orderValue": 1
      }]
    },
    {
    "name": "Customer",
    "description": "<description of schema>",
    "version": "2.0",
    "schemaAttributes": [{
        "id": 1,
        "name": "Customer Name",
        "title": "CName"
        "datatype": "string",
        "description": "<some description>",
        "orderValue": 0
      },
      {
        "id": 2,
        "name": "Customer Email",
        "title": "Email"
        "datatype": "string",
        "description": "<some description>",
        "orderValue": 1
      }]
    }]
}
```


#### archive (ADIA-CS-004)

<strong>Request</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/archive",
  "@id": "<uuid-archive-schema-12345>",
  "adia": {
    "attributes": {
      "entityType": "{ ISSUER | DAS | ARD }",
      "entityId": "{ ISSUER_ID | DAS_ID | ARD_ID }",
      "digitalAddress": "{ENTITY_DA}",
      "schemaId": "abcd123456"
    }
  }
}
```

<strong>Response</strong>

```json
{
  "@type": "https://adiassociation.org/credential-schema/1.0/archive-response",
  "@id": "<uuid-archive-cred-response>",
  "status": "{ OK | FAILED | PENDING }",
  "comment": "Schema Archived",
  "~thread": {
    "thid": "uuid-archive-schema-12345",
    "message": "e.g. comment or reason of failed request"
  }
}
```
