## Verification Protocol ## {#sctn-verification-protocol}

Defines ADIA-specific protocol extensions which are basically a companion to the Aries `1.0/present-proof` protocol RFC.
It also describes steps for Proof Presentation by a User to the Service Provider.

<table class="data longlastcol">
  <thead>
    <th>Title</th>
    <th>Description</th>
  </thead>
  <tbody>
  <tr>
    <td nowrap><strong>Protocol Name & Version</strong></td>
    <td>`verification`, `1.0`</td>
  </tr>
    <tr>
      <td nowrap><strong>Motivation</strong></td>
      <td>
        In addition to the Aries `present-proof` (v1.0) protocol, there are several ADIA-specific operations 
        that are required to be supported in the ADIA Ecosystem during the Proof Presentation. E.g. Lookup VC metadata, 
        Retrieve VC from Issuer's VC Store. This extention protocol defines those ADIA-specific Verification operations.
      </td>
    </tr>
  </tbody>
</table>


### Implemented By
* SP Agent
* Cloud Agent
* Issuer Agent

### Roles
* Service Provider - Requests a proof of VC possession
* User - Responds to the proof presentation requests
* Issuer - Retrieves VCs from VC Store based on User's requests

### Sub/Co-protocols
This protocol uses following standard Aries protocol messages defined in Aries-RFC <a href="https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof">0037-present-proof</a>
* ```/connection/1.0/request``` - as a subprotocol to establish a DID-based connection
* ```/didcomm.org/1.0/present-proof``` - as a main protocol to request for & verify a Credential proof.


### States
<strong>States for Service Provider</strong>
* `request-sent` <em>(standard)</em>
* `proposal-received` <em>(standard)</em>
* `request-received` <em>(standard)</em>
* `presentation-received` <em>(standard)</em>
* `verification-successful`
* `verification-failed`
* `done`

<strong>States for User (Cloud Agent)</strong>
* `request-received` <em>(standard)</em>
* `proposal-sent` <em>(standard)</em>
* `consent-requested`
* `consent-received`
* `vc-request-sent`
* `vc-received`
* `presentation-sent` <em>(standard)</em>
* `reject-sent` <em>(standard)</em>
* `done`

<strong>States for Issuer</strong>
* `vc-request-received`
* `vc-sent`
* `done`

### Protocol Commands
- Following are the <em>companion protocols</em> to the standard `proof-presentation` (v1.0) protocol.

#### lookup-vc-metadata (ADIA-VP-001)
<strong>Request</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/lookup-vc-metadata",
    "@id": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
    "attributes":
        {
        }
}
```

<strong>Response</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/lookup-vc-metadata-response",
    "@id": "7d221391-f454-4f54-a926-db77ef28d1c5",
    "status": "{ OK | FAILED | PENDING }",
    "~thread": {
      "thid": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
      "message": "e.g. comment or reason of failed request"
    }
}
```

#### request-consent (ADIA-VP-002)
<strong>Request</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/request-consent",
    "@id": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
    "attributes":
      {
      }
}
```

<strong>Response</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/request-consent-response",
    "@id": "7d221391-f454-4f54-a926-db77ef28d1c5",
    "status": "{ OK | FAILED | PENDING }",
    "~thread": {
      "thid": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
      "message": "e.g. comment or reason of failed request"
    }
}
```

#### receive-consent (ADIA-VP-003)

<strong>Request</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/receive-consent",
    "@id": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
    "attributes":
      {
      }
}
```

<strong>Response</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/receive-consent-response",
    "@id": "7d221391-f454-4f54-a926-db77ef28d1c5",
    "status": "{ OK | FAILED | PENDING }",
    "~thread": {
      "thid": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
      "message": "e.g. comment or reason of failed request"
    }
}
```

#### request-vc (ADIA-VP-004)

<strong>Request</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/request-vc",
    "@id": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
    "attributes":
      {
      }
}
```

<strong>Response</strong>

```json
{
    "@type": "https://adiassociation.org/verification/1.0/request-vc-response",
    "@id": "7d221391-f454-4f54-a926-db77ef28d1c5",
    "status": "{ OK | FAILED | PENDING }",
    "~thread": {
      "thid": "be4f19f7-d7d6-4ace-aca9-194d8a8a661d",
      "message": "e.g. comment or reason of failed request"
    }
}
```

#### verify-vc-claims (ADIA-VP-005)
- A subprotocol to be implemented by the SP Agent to verify each claim in the VC.


### Standard Protocol Commands

Following standard protocol messages are used as defined in the Aries `present-proof` (v1.0).

#### propose-presentation
#### request-presentation
#### presentation

