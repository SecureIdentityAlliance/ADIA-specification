<!-- -*- mode: Text; eval: (auto-fill-mode 1); -*- -->
<pre class='metadata'>
Title: DID Alliance GADI Overview
Shortname: gadi-overview
Prepare for TR: true
Level: 1
Status: ED
Group: fido
URL:
Editor: Ramesh Kesanupalli, ramesh@digitaltrust.net
Editor: Rolf Lindemann, rolf@noknok.com
Editor: Suresh Batchu, suresh@digitaltrust.net
Editor: Kiran Addepalli, kiran@digitaltrust.net



Abstract: The GADI Specification establishes the foundational technology components to establish a Trustable Identity Framework by providing a unique <a>Digital Address</a> to Human Identities to empower them to distribute Identity information and reinforce Trust and Accountability the in the Digital World.

Issue Tracking: GitHub https://github.com/DIDAlliance/DID-specification
Text Macro: INFORMATIVE <em>This section is not normative.</em>
Text Macro: NORMATIVE <em>This section is normative.</em>
Boilerplate: omit conformance, omit feedback-header, omit abstract-header
Local Boilerplate: header yes, footer yes, logo yes, copyright yes
Markup Shorthands: css off, markdown on
</pre>

<pre class="link-defaults">
spec:html; type:dfn; for:environment settings object; text:global object
spec:infra; type:dfn; text:list
spec:url; type:dfn; text:domain
spec:url; type:dfn; text:valid domain;
spec:webappsec-credential-management-1; type:dictionary; for:/; text:CredentialRequestOptions
spec:webidl; type:interface; text:Promise
</pre>

<!-- only put content here if you want a custom status of document not
  the specification-maturity-appropriate boilerplate -->

# Global Architecture for Digital Identity # {#sctn-gadi}

One of the greatest challenges in any digital identity system is connecting, or binding, a physical identity with a logical identity. The question of how to bind an individual to a digital representation of that individual has proven to be a challenging one

Identity verification or proofing is one method in which a combination of trusted, normally government-issued, documents (passports, driving licenses and national ID cards), biometric data, nominally face, and other identity information can be linked to verifiable digital identity credentials to form effective binding between physical and digital identity. A major problem with the current approach is that there is no one source for a verified digital identity, a unique digital address that acts a trust anchor. Users have to repeat similar processes each time they are required to prove their identities. This is inefficient, adds friction for users and is costly for service providers.

The Global Architecture for Digital Identity (GADI) allows users to
share credentials that have been asserted by an issuer with service
providers in a verifiable manner.

## Ecosystem Overview ## {#sctn-ecosystem-overview}

Global Architecture for Digital Identity (GADI) is a decentralized network of networks integrating Regional Directories, Interchanges, Issuers, Service Provider and Users with
unique Trust Anchors. All entities within the architecture are represented by DIDs.
Each DID is resolvable to a DID Document which contains cryptographic keys and service endpoints as specified in the DID Core Specification.

Three main concerns addressed by the ecosystem are to:
* provide a Look up at the time of initial onboarding to make sure there no duplications
* provide the Trust Framework and a source of truth should there be any fraud to facilitate the accountability.
* facilitate the value settlements across different Identity System

<figure id="fig-gadi-overview">
    <img src="images/GADI-overview.png"/>
    <figcaption>GADI Overview</figcaption>
</figure>

The ecosystem consists of several entities that are involved in the Trust framework. These are:

* **GADI Global Directory**: One primary Root of Trust system with one or more distributed or delegated shared instances.
* **GADI Regional Directory**: One or more Directory Services serving a scope, such as, a geopolitical region or a country. Each directory serves to uniquely identify each participant via a digital address or a collection of attributes.
* **Interchange**: A loose composition of services providing foundational services such as Agency, Identity Brokering, Credential Brokering and Payment Brokering functionality for the entities in the ecosystem.
* **Digital Address Provider (DAP)**: An agency providing services to entities within its domain. All interactions between entities is facilitated through agents and services provided by the Agency.
* **Issuer**: One or more Issuers representing both Identity (e.g. DMV, Passport Office, etc) or Non-Identity Credential Issuers (e.g. University, Enterprise, Healthcare Provider, etc).
* **Service Provider**: One or more service providers acting as relying parties. E.g. E-commerce site, Retailer, etc
* **User**: Holder and usually Subject of the <a>Digital Address</a> - One per human identity.

These entities and their role in the GADI ecosystem are described in [[#sctn-roles-in-gadi]].


## GADI Requirements ## {#sctn-reqs}

Issue: We will likely remove this section later.  But for now let's
   keep it as a reference for the requirements th specs needs to meet.

<figure id="table-security-privacy-goals" class="table">
    <table class="data longlastcol">
        <thead>
            <th>No</th>
            <th>Goal</th>
            <th>Rationale</th>
        </thead>
        <tbody>
        <tr>
            <td>1</td>
            <td>
    The GADI Framework respects national laws and allows the <a>DAP</a>s to operate according to their local regulations.
     This includes compliance to CCPA and GDPR.
      </td>
            <td>
          Local law is the basis for any business.
            </td>
        </tr>
        <tr>
            <td>2</td>
            <td>
        Users must have control on user credentials, i.e. no credentials are created or shared without the user's consent.
        This means, <a>DAP</a> asks for user consent and strongly authenticates the user.
      </td>
            <td>
        Data Privacy regulation & expectation
            </td>
        </tr>
        <tr>
            <td>3</td>
            <td>
        Users have the ability to select a set of attributes verified by a specific issuer to be included in a specific credential.
      </td>
            <td>
        Data Privacy regulation & expectation.  If the user only wants to share a subset of the data that should be ok to the issuer.
            </td>
        </tr>
        <tr>
            <td>4</td>
            <td>
        GADI doesn't make user tracking or collusion between Service Providers easier.
        If two <a>SP</a>s both received a credential that John Doe was born on date X in Y,
        then the two <a>SP</a>s could learn it is the very likely same user. But this has nothing to do with GADI.

        As a consequence, the <a>Digital Address</a> / <a>Trust Anchor</a> are NOT part of the credential.
        Credentials are in the W3C VC format [[!vc-data-model]] and are tied to a <a>DID</a>.
      </td>
            <td>
        GADI doesn't share correlation handles with <a>SP</a>s for privacy reasons.
            </td>
        </tr>
        <tr>
            <td>5</td>
            <td>
        People who are not smartphone users must be part of the new Digital Identity ecosystem.
      </td>
            <td>
        A substantial part of the world's population belongs to this category.  This part is key for future growth opportunities
            </td>
        </tr>
        <tr>
            <td>6</td>
            <td>
        <a>Issuer</a>s must be in the value chain.  This means that users cannot share credentials issued by
        an issuer without allowing financial compensation for the issuer.
      </td>
            <td>
        This is one of the main GADI benefits compared to other approaches.
            </td>
        </tr>
        <tr>
            <td>7</td>
            <td>
        GADI enables a push model from the issuers where when there is change in credential status,
        latest credential information is what would be presented.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>8</td>
            <td>
        <a>Issuer</a>s should be able to issue the credentials to users who are not part of the same network, i.e.
        who got their <a>Trust Anchor</a> from a different Digital Address Provider (<a>DAP</a>) than the one this issuer is primarily using.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>9</td>
            <td>
        There should be cross ledger value settlements for the issuers and may be
        some reward points for the issuers as Users assert their credentials and provide data.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>10</td>
            <td>
        Onboard the user with a trusted Identity that is approved by an <a>Issuer</a> after proper Identity vetting
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>11</td>
            <td>
         It is possible for users to start their participation
        based on a low level identity assertion and increase
        that level over time.

        However, there is a minmum identity assertion specified
        by the GADI Governance Group. We need this to prevent
        user impersonation attacks through weak ID proofing methods.

      </td>
            <td>
        Many users don't have connections to a <a>SP</a> which has performed strong ID proofing today.
         But that might change over time.  We need to support such users.
            </td>
        </tr>
        <tr>
            <td>12</td>
            <td>
        Each <a>DAP</a> provides one Single Digital Address App for the user to be able to access and control the
        Identity and Credentials with a Digital Address Provider acting as a custodian interface to interchange the
        user credentials on demand with user consent.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>13</td>
            <td>
        <a>Digital Address</a> (<a>DA</a>) is a Human readable string that is easy to use, that is associated with the Users <a>Trust Anchor</a>.
        This becomes that identifier that the user can provide to issuers to get the credentials issued.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>14</td>
            <td>
        Users in this scenario will have a single Digital Address Application from one Digital Address Provider
        and the user will be able to present this human readable, typable, or presentable to the issuers to be able to
        push the credentials for the user.   This is just between users and <a>Issuer</a>s.  We however can also provide
        different handles (Different Digital Addresses) that can be orchestrated between the user Device and <a>DAP</a> to
        present to different issuers if we need to also make DA one time as the issued credential is a <a>DID</a>.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>15</td>
            <td>
        The GADI ledger is accessible to <a>DAP</a>s only.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>16</td>
            <td>
        <a>Trust Anchor</a>s are generated randomly by the <a>HomeDAP</a>, such that collisions do not practically occur.
        See <a>Trust Anchor</a> Discussion below.
        (not clear, see 20)
      </td>
            <td>
        So that we only need to delete the relation between the <a>Trust Anchor</a> and any other PII when the user
        asks for account deletion (removal from GADI).
            </td>
        </tr>
        <tr>
            <td>17</td>
            <td>
        Credentials that do not include PII shall be supported.  For example "the holder of the credential is at least 21 years old"
        or "the holder of this credential got vaccinated against X".

Note: sometimes there are existing business processes which will convey PI/PII outside of GADI.
       </td>
            <td>
        In the physical world we have those and for privacy reasons we should carry them over to the digital world.
            </td>
        </tr>
        <tr>
            <td>18</td>
            <td>
        GADI and <a>DAP</a>s do NOT persistently store personal information (PI).
        And even pass-through of PI should be avoided.

Note: they will likely need to store PII, i.e. information related to users

Note: <a>Issuer</a>s will have to store PI (in order to be able to issue credentials)
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>19</td>
            <td>
        GADI will store the <a>HomeDAP</a> Identifier (i.e. <a>HomeDAP_ID</a>) along with the user's <a>Trust Anchor</a>.
        So each <a>DAP</a> could ask GADI for the <a>HomeDAP</a> of a given user and would then directly talk to the user's <a>HomeDAP</a>.
      </td>
            <td>
        We need that for cross-<a>DAP</a> communications
            </td>
        </tr>
        <tr>
            <td>20</td>
            <td>
        We compute a Hash(firstname, last name, date of birth, country+city of birth) as either use this as
        <a>Trust Anchor</a> or as an attribute stored along with the <a>Trust Anchor</a> in GADI.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>21</td>
            <td>
        It shall  be possible to change the <a>HomeDAP</a> of a user (e.g. from <a>DAP</a>1 to <a>DAP</a>2).
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>22</td>
            <td>
        <a>Issuer</a>s shouldn't learn the <a>SP</a> that verifies a credential.
      </td>
            <td>
        Privacy
            </td>
        </tr>
        <tr>
            <td>23</td>
            <td>
             <a>SP</a>s want to verify the <a>VC</a> and hence will
         need to decide whether they want to trust a specific
        <a>Issuer</a>.
        As a consequence, the <a>SP</a> will learn who the
        <a>Issuer</a> of that <a>VC</a> is.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>24</td>
            <td>

Issue: Need to specify what functionality/certification is needed to call an application a GADI "Digital Address Application".
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>25</td>
            <td>
        Organizational participants, including issuers, verifiers, and service providers require a publicly
           resolvable DID
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>26</td>
            <td>
      Regional directory services include the User related information,
      the global directory only includes information on issuers,
      service providers abd interchanges.
      So compliance can be managed on a regional level.
      </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>27</td>
            <td>
      Logically, the DAA is provided by The Agency - not the Issuer.
      However, the Issuer could still provide the DAA on behalf
      of The Agency.
      </td>
            <td>
            </td>
        </tr>
        </tbody>
    </table>
</figure>


## Trust Anchor ## {#sctn-trust-anchor}

Trust Anchor is a Unique Key for a given entity in the GADI ecosystem. It provides a binding with a Human Identity without storing any personal information.
A Trust Anchor uniquely maps a User's <a>Digital Address</a> and a DAP assigned DID.


The GADI Directories, for regulatory purposes and user privacy, do not store any personal information about a user or an entity.
Directories support the ability to of a user’s right to be forgotten in many jurisdiction. GADI Regional and GADI Global Directories MUST support
on-chain and off-ledger storages:
* A privacy preserving distributed database that holds the <a>HIDA</a>
* A DLT holding the Trust Anchor and any metadata relating to the <a>Digital Address</a>es

### Trust Anchor Format ### {#sctn-ta-format}

A Trust Anchor is an opaque string with no logic embedded. It is a technical identifier to the <a>Digital Address</a> metadata. The format is specified as follows:

<pre class="highlight">
  <code>
    234345456AABCCC23456456456DSDS
  </code>
</pre>

A Trust Anchor has the following constraints:

* MUST contain a minimum of 36 alpha-numeric characters.
* MUST be unique to a DAP.
* MAY NOT contain certain special characters




## Digital Address ## {#sctn-digital-address}

DIDs are the foundational identifiers of the system but are not
participant friendly. The <dfn>Digital Address</dfn> is a special GADI identifier issued to an individual by a certified Digital Address Issuer after Know Your Customer (KYC) processes have been followed.

<a>Digital Address</a>es are designed to be human friendly and facilitate interaction with entities. Entities can register one or more digital addresses with a directory. When they present their digital address to a participating service, the service can contact the directory and receive a DID that represents the participant.
Further communication and cryptographic trust are then founded on the provided DID. <a>Digital Address</a>es contain a directory indicator that can be used to identify which directory has the associated listing.

To prevent the <a>Digital Address</a> from being misused as a correlating identifier, <a>Digital Address</a>es must not be retained by participating services after resolution.
Their role is specifically limited to easing participant-onboarding processes.

The creation of a <a>Digital Address</a> is a vitally important step in ensuring there is both trust and accountability within the GADI ecosystem. Digital Address Issuers could be financial service providers, government agencies, education providers and enterprises; organizations that are central to the trust economy.

### Digital Address Format ### {#sctn-da-format}

<a>Digital Address</a> is an user friendly mnemonic that maps to a technical identifier, the DID for the user. The format is specified as follows:

<pre class="highlight">
  <code>
    Alphanumeric@HomeDAPIdentifier
  </code>
</pre>

<a>Digital Address</a> prefix has the following constraints:

* MUST contain a minimum of 8 alpha-numeric characters.
* MUST be no longer than 16 characters.
* MUST be unique to a DAP.
* MAY contain certain special characters (will this be allowed? what would the set be?)
* SHOULD be human-readable and memorable.
* The Separator MUST be an @ sign.

The <a>Digital Address</a> postfix:
* MUST contain the HomeDAP identifier.

Example:
<code>
  steve77@MRVL
</code>


### Only One Digital Address Per User ### {#sctn-da-uniqueness}

A user shall not have more than one GADI <a>Digital Address</a>.  To ensure
this uniqueness, the identity-related traits for a user are verified and hashed by an Issuer Agent.
This specification defines the following attributes for all human identities to create a <a>HIDA</a>,
a cryptographic hash computed over the following identity attributes:

1. First name
2. Last name
3. Date of Birth
4. Gender
5. and One of the following:
    * Country of Birth
    * Government Issued National Identifier - SSN, Resident ID, Aadhaar ID, etc if such exists

The <a>HIDA</a> is used to query the GADI Regional Directory to determine uniqueness of the user based on the identity attributes provided.
The process of binding the <a>Digital Address</a> with the Trust Anchor notifying the user is described in [[#sctn-onboarding-1st-issuer]]


## Roles in GADI ## {#sctn-roles-in-gadi}

### GADI Global Directory ### {#sctn-gadi-role-global-directory}

The <dfn>GADI Global Directory</dfn> serves as a Root of Trust to all entities in the ecosystem except the Users. The Directory ensures interoperability between multiple Regional Directories and Interchanges.
Uniqueness of the entities is defined by the relationship of identifiers -  the Entity's <a>Digital Address</a>, the DID and the Trust Anchors and binding them to
organizational entities at a global level.

#### Directory Scope #### {#sctn-gadi-global-directory-scope}

The GADI Governance Framework, described in a separate document, defines onboarding policies and procedures for organizational entities and establishing the relationships
between the <a>Digital Address</a>, the DID and Trust Anchor. The entities governed by the <a>GADI Global Directory</a> are:
  * *GADI Regional Directories*
  * *DAP Agencies*
  * *Issuers*
  * *Service Providers*
  * *Identity Escrow (Future)*
  * *Credential Broker (Future)*
  * *Payment Broker (Future)*

The <a>GADI Global Directory</a> may provide Discovery and Routing services between one or more Regional Directories to facilitate identity verifications across one or more geographical regions.

Issue: Link the Governance Policies and procedures

#### Uniqueness properties #### {#sctn-gadi-global-uniqueness}

<a>GADI Global Directory</a> ensure uniqueness of the listed organizational entities. This is done by ensuring a unique set of attributes for each organization.

Issue: uniqueness properties are required for Business entities just like users

#### Directory Querying #### {#sctn-gadi-global-ds-query}

A qualified party may query the directory by providing attributes or a digital address. The directory will either return a ‘None Found’ response, or a DID of the entity identified.
The <a>GADI Global Directory</a> has several components that enable saving Trust Anchors and relationships:

* **GADI Ledger**: Distributed Ledger (DLT) to maintain immutable entity relationships between <a>Digital Address</a>es and Trust Anchors. Ledger APIs abstract details of the underlying storage and interaction with the ledger.
* **GADI Console**: An administrative interface to view and manage metadata of the entities.
* **GADI Agent**: A communications agent to integrate identity transactions between an the <a>GADI Global Directory</a> and Regional Directories.
* **API Services**: REST endpoints to provide lookup and discover services.

#### Roles #### {#sctn-gadi-global-ds-roles}

The types of actors that interact with GADI are described below:

* *Admin*: Role to configure the GADI with system level information.
* *Approver*: Role to approve or reject onboarding of a DAP or Interchange Services.
* *GADI Regional Directory Admin*: Requests onboarding to GADI via the GADI Console. Requests changes to Assurance Levels and policy changes.


### GADI Regional Directory ### {#sctn-gadi-role-regional-directory}

A directory serves to identify participants with an ecosystem. This can make it easier for users without a digital device or knowledge of how to use one. Users can be looked up by attributes or a digital address, both of which are discussed in this spec.

#### Directory Scope  #### {#sctn-gadi-regional-directory-scope}
Each directory serves a particular scope. Scopes can be geopolitical, like a country, or organizational, such as a multi-national medical organization or a university. Each directory serves to uniquely identify each participant via digital address or a collection of attributes.

A GADI Regional Directory MUST:
* prevent a person from intentionally or unintentionally creating more than one Trust Anchor within a given scope.
* provide interoperability between multiple Digital Address Providers within its scope.
* provide discovery and routing services between one or more Digital Address Providers.
* provide a distributed ledger for maintaining relationships between Trust Anchors and <a>Digital Address</a>es and bindings to human identities.
* onboard trusted Digital Address Providers to the ecosystem.
* maintain a relationship of identifiers - A Trust Anchor, user’s <a>Digital Address</a>, DID and Issuer Identifier.
* detect collisions in Trust Anchor and/or <a>Digital Address</a>.

Directory scopes can and will overlap. A university may run a directory for students and faculty in a country where a directory is run for the country. People may be listed in multiple directories without conflict. Initial directories will be run by GADI to seed the ecosystem. Other entities may operate directories in conformance with the governance structure and APIs.

#### Attribute selection and management #### {#sctn-gadi-global-attribute}
Each directory has a set of attributes used to list users in the directory. These attributes are received via credentials from issuers authorized by the appropriate governance framework. When necessary for uniqueness (described in the next section), the directory may request additional attributes from a user, also supplied via credentials.

Directories may use any datastore sufficient to the requirements of storing attributes. Datastores MUST be able to remove listed records at the request of the user.

#### Uniqueness properties #### {#sctn-gadi-global-uniqueness}
GADI Directories ensure uniqueness of the listed users. This is done by ensuring a unique set of attributes for each user. If a new user matches an existing user, additional attributes MUST be requested for use in distinguishing between the matching users.

Each directory MUST have a process to follow when users cannot be uniquely identified either during addition of a user to the directory or during lookup of a user within the directory.

#### Hashed Attributes
Directories (MAY/MUST TBD) store only hashed attributes and accept hashed attribute queries. This prevents the directory from directly knowing the attributes involved. This requires the issuance of a credential that contains hashed user attributes from the issuer, used for listing in a directory.

Issue: Discuss the tradeoffs between hashed/unhashed attributes within regional directories. For example, the GADI regional directory for the EU may require hashed attributes, while a companies supporting solar energy directory may not require hashing of it's attributes.

#### Digital address #### {#sctn-gadi-global-da}
<a>Digital Address</a>es function as a human friendly identifier for end users to use in lieu of sharing attributes for directory lookup. The digital address contains a directory identifier in addition to the identifier linked to the user.

<a>Digital Address</a>es MAY contain PII, but the user MUST be warned if they choose one containing PII and MUST be allowed to choose a digital address that does not contain PII.

A single user MAY have multiple digital addresses that all link to the same user in the directory. Any of the linked digital addresses can be used to identify the user. Digital addresses do not function as a mechanism of uniqueness.

#### Listing Modifications #### {#sctn-gadi-global-modifications}
Users are listed in a directory by creating a DIDComm connection with the directory, then presenting credentials containing attributes issued by an acceptable issuer as determined by the governance framework.

The user lists a digital address by communicating that intent over the DIDComm connection with the directory.

When the user desires to be removed from the directory, they indicate that over the existing DIDComm connection.

These interactions are all detailed in the associated protocols summarized and linked below.

#### Directory Querying #### {#sctn-gadi-global-directory-query}
A qualified party may query the directory by providing attributes or a digital address. The directory will either return a ‘None Found’ response, or a DID of the user identified. The DID provided is created by the user’s agent, and provided to the directory for the purpose of returning to the party querying the directory. The user’s agent is notified of which party identified them in the directory.

The protocols for querying users are summarized and linked below.

#### Logging requirements #### {#sctn-gadi-global-logging}
Directories MUST log all listing modifications and queries.

#### Protocols for interaction #### {#sctn-gadi-global-protocol}
Existing
##### DID Exchange ##### {#sctn-gadi-global-did-exchange}

New
##### Credential Listing ##### {#sctn-gadi-global-credential-message}
    <dl>
        : CredentialListingUpdate //do we just add, or can we remove old listed things?
        :: Credential // how does this interface with credential exchange?

        : CredentialListingUpdateError
        :: Invalid Credential
        :: Duplicate detected

        : CredentialListingRemove
    </dl>

##### Directory Query ##### {#sctn-gadi-global-query-message}
// should this be a ‘one match only’ query protocol? As opposed to a directory that will return multiple matches?
    <dl>
        : DirectorySingleQuery directory
        :: Attributes
        : DirectorySingleResult
        :: DID
        : DirectorySingleEmpty // or is this a case of Result?
        : DirectorySingleConflict
        :: Attributes needed to resolve multiple answers
    </dl>

##### Digital Address ##### {#sctn-gadi-global-da-message}
Digital address as username? Keep this protocol separate?

    <dl>
        : DigitalAddressRegister
        :: Digital address
        : DigitalAddressResolve
        :: Digital address
        : DigitalAddressResult
        :: DID
        : DigitalAddressUnknown
        :: null

        : DigitalAddressRemove
        :: Digital address
    </dl>

##### DID ##### {#sctn-gadi-global-did-message}
    <dl>
        : DirectoryDIDRequest // get DID to later disclose
        :: Who gets it (optional, for cache if omitted)
        : DirectoryDIDAllocate //grant?
        :: DID
        : DirectoryDIDReceipt //already happened
        :: Who got it.  (DID? Attributes)
        :: Which DID.
        :: Which Digital Address  / attribute set

        :: //discovery? Is there a way to discover a directory schema prior to listing or querying?
        :: //did or invitation? Kind of same thing? Rotation expected?
    </dl>


### Interchange ### {#sctn-gadi-role-interchange}

The Interchange is composed of one or more the services that provide User Access services such as, <a>Digital Address</a> and Authentication to users, Agency services such as
Issuer and Service Provider Agents and optional value-added services such as Identity Escrow, Credential Brokerage and Payment Brokerage services.

Issue: Add details for Interchange


#### DAP #### {#sctn-gadi-role-dap-agency}

Digital Address Provider (DAP) plays a major role of enabling the identity and business transactions between issuers, service providers and users. The DAP uses a combination of on-Ledger and off-Ledger services to facilitate the capabilities of verifying credentials for relying parties.

The DAP may host a set of user-focused wallet storage and secure communication agents. When any interaction with a participant happens, it happens through their Agent via services.
Each entity's Agent holds cryptographic keys and digital credentials on behalf of the participant. The agent also manages the participant’s connections with services in the ecosystem. It maintains the participant’s directory listings and requests for unique DIDs when a new connection is made.
The Agent is configured with and uses machine-readable governance framework documents as policy for automatically accepting or rejecting credential interactions. When necessary, the agent will communicate with the participant through a secure channel and obtain consent. Participants authenticate to the Agent via FIDO when consent is required.
All interactions through the agent are logged and available for inspection by the entity.

##### Scope ##### {#sctn-dap-scope}

A DAP MUST:

* Onboard trusted Issuers and Service Providers to the system.
* Assign trusted identifiers to participating entities in the closed-ecosystem.
* Enable storage and retrieval of credential metadata to trusted issuers.
* Provide a mechanism to create and publish a <a>Digital Address</a>.
* Provide authentication services to users with their <a>Digital Address</a>es.
* Provide discovery services to identify and connect issuers, service providers and users securely.
* Meeting regulatory and compliance requirements in various geography and jurisdiction.


##### Components ##### {#sctn-dap-components}

The core components of a DAP are:
* **DAP Ledger**: DLT to maintain immutable entity relationships and transactions related to the identity verifications. Ledger APIs abstract details of the underlying storage and interaction with the ledger.
* **DAP Console**: An administrative interface to manage issuers, service providers and system settings.
* **DAP Agent**: A communications agent to integrate identity transactions between an Issuer network and the DAP
* **FIDO Service**: A FIDO server providing authentication services and authenticator policy management to users with a <a>Digital Address</a>.
* **API Services**: REST endpoints to provide credential issuance, verification, routing and discovery services for identity transactions.
* **Mediator**: Service to facilitate interactions with the user device with an SDK. Ex: Notifications, consent, etc.

##### Roles ##### {#sctn-dap-roles}

The types of actors that interact with the DAP are described below:
* *Admin*: Role to configure the DAP with system and issuer level properties
* *Approver*: Role to approve or reject onboarding of a trusted issuers in the system
* *Issuer Admin*: Requests onboarding to the DAP via the DAP Console, configures connectors to identity and credential stores in systems of record and publishes credential metadata to the DAP.
* *Service Provider Admin*: Configures rules to evaluate one or more credentials based on the available credential schema
* *User*: A subject or holder of the credential. Authenticates to the DAP with the <a>Digital Address</a>.



#### Credential Broker (Future) #### {#sctn-gadi-role-credential-broker}

The process of receiving credential presentations can be complicated. Verifiers and participants may enlist the use of a credential broker.
The broker can serve several functions in the process of aiding a credential presentation. The credential may be translated between formats, verifying one format and creating another that is readable by the verifier.

The broker can do the legwork of applying governance frameworks and checking the credential issuer for validity. This is particularly helpful when interacting with an interchange provider not previously known to the verifier.
The broker must involve the participant’s agent and, in the process, obtain consent to share the user’s credential.
During the exchange of the credential, the broker may also facilitate payment to the parties involved in the credential’s issuance and flow.


Issue: Content copied as-is from Indicio's recommendations. Please add details for Credential Broker


#### Identity Escrow (Future) #### {#sctn-gadi-role-identity-escrow}

Privacy preserving accountability is provided by Identity Escrow Services. Identity data is presented to the Identity Escrow Service in a credential from an approved issuer. The Escrow Service stores the data and issues an escrow credential to the participant. Each escrow credential obtained by the participant contains a unique id.

Upon connecting to a new service, the participant presents the escrow credential. The service validates the credential, and then retains the unique id. Should the participant violate the terms of service or otherwise require accountability for their actions, the service will present the request and evidence to the Escrow Service. The escrow service will evaluate the request and evidence against their policies. If policy indicates, the escrow service will notify the participant of the disclosure, disclose the identity data from escrow, and log the evidence and disclosure for independent audit. Disclosure logs are retained for a period set by policy.

Both the service and the participant must agree on the terms and policy of the Identity Escrow Service. The use, policy, and terms of Identity Escrow use should be contained within applicable governance frameworks. The right to be forgotten may be delayed for a period of time to allow adequate time for violation disclosure requests to be processed and resolved.


Issue: Content copied as-is from Indicio's recommendations. Please add details for Identity Escrow


#### Payment Broker (Future) #### {#sctn-gadi-role-payment-broker}

Financial transactions are another area that can benefit from the involvement of a broker. The broker can perform currency conversions to the benefit of both parties. The broker will also communicate with all parties in the payment flow. When required by law, the broker can log the transaction sufficiently to satisfy regulation such as Anti-Money Laundering (AML) laws.
Payment flows can be used for credentials but may also be used for general purpose payment. In the future, payment can also involve verifying goods delivery prior to releasing payment.

Issue: Content copied as-is from Indicio's recommendations. Add details for Payment Broker


### Agent ### {#sctn-gadi-role-agent}

All interactions between entities is facilitated through agents and services provided by the DAP. Each entity’s Agent holds cryptographic keys and digital credentials on behalf of the entity.
Agents also manages the participant’s connections with services in the ecosystem. The agents for Issuers and Service Providers implement protocols for establishing connection and perform exchanging DIDs, Credentials and Proofs requests.

Inbound and outbound communication are based on DIDComm Messaging Specification.

#### Issuer/Service Provider Agent #### {#sctn-gadi-role-issuer-sp-agent}

Issue: Add details for Issuer and Service Provider agents supporting DIDComm

#### Cloud Agent #### {#sctn-gadi-role-cloud-agent}

Issue: Add details for User Agents/Cloud agents supporting DIDComm



### Issuer ### {#sctn-gadi-role-issuer}

GADI Architecture trust between entities is brokered by the DAP. Issuers of a Verified Credential are separated from
the Service Providers (verifiers of a credentials) with a level of trust. Issuers are also custodians of an issued credentials but owned by the user it is issued to.

#### Scope #### {#sctn-issuer-scope}

A Trusted Issuer MUST:
* Use an approved method or process to create a unique Trust Anchor based on Identity attributes for a new or existing user in a scope.
* Detect the presence of a Trust Anchor in the GADI ecosystem.
* Use an approved method or process to Create and Lookup a unique <a>Digital Address</a> for the User.
* Provide mechanism to link a <a>Digital Address</a> for existing users.
* Certify the KYC process for the entity and determine Assurance Levels for issued credential using an approved method or process.
* Onboard users to issuer systems using a <a>Digital Address</a> with the holder’s consent.
* Issue/reissue or revoke one or more Verifiable Credentials to the holder of a <a>Digital Address</a>
* Persist Verifiable credential in a secure storage (VC Storage)
* Publish credential metadata to the <a>Digital Address</a> Provider and user of the <a>Digital Address</a>.
* Verify proof requests from Service Providers or other entities for credentials of the holder with a <a>Digital Address</a>.

#### Components #### {#sctn-issuer-components}

The core components of an Issuer are:
* **Issuer Console**: An administrative interface to view Users, Identity information and Credential information. Administrators issue Verifiable Credential from the console to holders.
* **Issuer Agent**: A communications agent to integrate identity transactions between an Issuer network and the DAP
* **VC Store**: A secure storage area for issuers to persist issued Verifiable Credentials.
* **API Services**: REST endpoints to abstract interactions with the communication and transformation agents.
* **Connectors**: Adapters that connect to Identity and Credential datastores, perform scheduled transfers, transform content for the Issuers to view and issue Credentials to users.

#### Roles #### {#sctn-issuer-components}

* *Issuer Admin*: Requests onboarding to the DAP via the DAP Console, configures connectors to identity and credential stores in systems of record and publishes credential metadata to the DAP.
* *DAP Admin*: Role to approve or reject onboarding of a trusted issuers in the system. This may be an automated process or a service agent acting on behalf of a DAP.
* *User*: A subject or holder requesting a credential to be issued. The credential may be requested in person or online. Users must have a <a>Digital Address</a> before receiving a credential issued to them.


### Service Provider ### {#sctn-gadi-role-serviceprovider}

Service Providers are relying parties in the ecosystem. Credential verification are requested from the user to identity the user reliably before providing services. The proof requests are
defined by Service Providers from one or more Credential Schema published by Trusted Issuers in the GADI ecosystem. The verification rulesets may be defined based on a combination of criteria:
* Claim information in the credential
* Assurance Level of a credential type
* Assurance Level of the Issuers in the system
* Whitelisted set of Issuers that the Service Provider trusts
* and so on...

Service Providers take a risk-based approach based on their enterprise needs and risk management policies before accepting the Verifiable Presentations made by the User.


#### Scope #### {#sctn-serviceprovider-scope}

A Service Provider MUST:

* Accept and verify a <a>Digital Address</a> for a user in multiple forms - QR code, a user friendly moniker or a smart card.
* Request for proofs on one or more user claims using a credential schema.
* Accept responses to proof requests from one or more trusted Issuers in the ecosystem.
* Determine acceptable Assurance Levels for credentials and define policies based on risk tolerance of the organization.
* Grant or deny services to a user based on risk-based policies.

#### Components #### {#sctn-serviceprovider-components}

The core components of a Service Provider are:
* **Service Provider Console**: An administrative interface to create rule definitions for a certain service.
* **Service Provider Agent**: A communications agent to integrate identity transactions between an Service Provider network and the DAP
* **API Services**: REST endpoints to abstract interactions with the communication and transformation agents.


#### Roles #### {#sctn-serviceprovider-roles}
* *Service Provider Admin*: Requests onboarding to the DAP via the DAP Console and define new rulesets
* *DAP Admin*: Role to approve or reject onboarding of a trusted Service Providers in the system. This may be an automated process or a service agent acting on behalf of a DAP.
* *User*: A subject or holder verifying a credential. Users must have a <a>Digital Address</a> and consented before verifying a credential issued to them.



### User ### {#sctn-gadi-role-user}

A User is a holder of a unique <a>Digital Address</a> and receives it from a Trust Issuer after the KYC Process is completed.
The user can then use their <a>Digital Address</a> for various purposes like, for example, receiving Verifiable Credentials such as an Identity Credential, or credentials that prove Educational qualifications, Health records, Employment, etc.

#### Scope #### {#sctn-user-scope}

* Obtain a <a>Digital Address</a> from a Trusted Issuer in the GADI ecosystem.
* Receive one or more Identity Credentials by complying to KYC processes from Trusted Identity Issuers.
* Receive one or more User Credentials such as Employment Credential, Medical Record etc  from one or more Credential Issuers.
* Present issued credentials as proof to Service Providers.
* Grant consent for verification requests from Service Providers.


### Digital Address App (DAA) ### {#sctn-gadi-role-daa}

For users to be part of the GADI ecosystem, they must be in control of a <a>Digital Address</a>. The <a>Digital Address</a> may be acquired in many forms, primarily a QR code over various channels such as an Authenticator App,
Email, SmartCard or directly from a trusted Issuer.


DAA is an Authenticator App that lets users scan a <a>Digital Address</a>, bind <a>Digital Address</a> with the DAP and consent for verification requests.

#### Components #### {#sctn-daa-components}

The core components of a Digital Address App are:

* **DAP Mobile SDK**: SDK to abstract interaction of the mobile application with the ecosystem services. All interactions with the issuers and service providers are brokered by the DAP services.
* **FIDO Client**: OnePass Client SDK to provide register and authenticate with a <a>Digital Address</a>.
* **Identity Verification SDK**: An Identity Verification client SDK to ID proof a government-issued identification document such as Driver’s License or Passport
* **Credential Metadata**: On-device store of the credential metadata issued to the digital address. Interacts with the DAP services to lookup and retrieve actual credentials from the issuer.
* **Push Notification Service**: External service to push notifications to the user for events such as credential issuance, revocation, proof requests, and consent

#### Roles #### {#sctn-daa-roles}

The types of actors that interact with the Mobile App are described below:
* *User*: A subject or holder of the credential. Authenticates to the DAP with the <a>Digital Address</a>.
* *Issuer Admin*: Issues a <a>Digital Address</a>, Issues and revokes credentials issued to the user.
* *Service Provider Admin*: Configures rules to evaluate one or more credentials based on the available credential schema. Requests proofs and verifies the credentials.



## Trust Model ## {#sctn-trust-model}

Issue: Describe what is verified by whom, what kind of objects
   ("credentials") are being created and what kind of identifiers they
   bind together (e.g. public keys and digital addresses, ...).

## Identifiers ## {#sctn-gadi-identifiers}

Issue: Please check - Trust Anchor, <a>Digital Address</a>,
DAP Identifier, Home DAP Identifier, Issuer Identifier, Service Provider Identifier,
DAP Identifier, GADI Regional Directory Identifier


   <dl>
       : <dfn>Cloud Agent</dfn>
       :: A cloud accessible entity that acts on behalf of the user. It has some similarity to the
            eIDAS Trust Service Providers (https://ec.europa.eu/digital-single-market/en/trust-services).

       : <dfn>Credential Broker</dfn>
       ::

   Issue: TODO

       : <dfn>DA</dfn>
       :: Human readabe <a>Digital Address</a> of the <a>User</a>
            (e.g. blackbird@issuer.dap.gadi.org).

            Note: The <a>DA</a> doesn't <i>have</i> to include the user's real
            name - "fun" names are allowed and recommended. However, real
            names are still allowed and the GADI system doesn't check
            whether users use them.


       : <dfn>DAP_USER_ID</dfn>
       :: The DAP specific Decentralized Identifier (DID) related to the <a>DA</a>, e.g. did:example:123456789abcdefghi

       :  <dfn>DAP_USER_ID_PK</dfn>, <dfn>DAP_USER_ID_SK</dfn>
       :: Public Key (PK) and Private Key (SK) related to the <a>DAP_USER_ID</a>.

       :  <dfn>DAA</dfn>
       :: Digital Address Application, e.g. Android App or iOS App that
           knows how to talk to the <a>DAP</a> on behalf of the <a>User</a>.

       :  <dfn>DAP</dfn> (formerly DAP)
       :: Digital Address Provider Agency.  See [[DAP-API]] for the DAP
           Agency API.  Multiple DAP Agencies can exist in the GADI "universe".

       :  <dfn>DAP_ID</dfn>
       :: <a>DAP</a> IDentity, i.e. the W3C DID style identifier for the <a>DAP</a>.

       :  <dfn>DAP_ID_PK</dfn>, <dfn>DAP_ID_SK</dfn>
       :: Public Key (PK) and Private Key (SK) related to the <a>DAP_ID</a>.

       : <dfn>DID</dfn>
       :: Decentralized Identifier according to [[!did-core]]

       : <dfn>GADI</dfn>
       :: Global Architecture for Digital IDentity. See [[GADI-API]] for the DAP API.

       : <dfn>GADI_ID</dfn>
       :: The <a>GADI</a> IDentity, i.e. the the W3C DID style identifier for the <a>GADI</a>.

       :  <dfn>GADI_ID_PK</dfn>, <dfn>GADI_ID_SK</dfn>
       :: Public Key (PK) and Private Key (SK) related to the <a>GADI_ID</a>.

       :  <dfn>HIDA</dfn>
       :: Cryptographic hash computed over the <a>ID Attributes</a>

       :  <dfn>HomeDAP_ID</dfn>
       :: DAP_ID of the <a>DAP</a> that user primarliy belongs to (i.e. <dfn>HomeDAP</dfn>).

       :  <dfn>ID Attributes</dfn>
       :: Attributes identifying a user uniquely, i.e. firstname, last name, date of birth, country of birth, city of birth.

       :  <dfn>Identity Escrow</dfn>
       ::

   Issue: TODO

       :  <dfn>Issuer</dfn>
       :: Issuer of <a>VC</a>s to users.  GADI supports multiple Issuers
           per <a>User</a>.  Issuers use an <dfn>Issuer Agent</dfn> to
           connect to the <a>DAP</a>.

       :  <dfn>ISSUER_ID</dfn>
       :: Issuer IDentity, i.e. the <a>DID</a> style identifier for the <a>Issuer</a>.

       :  <dfn>ISSUER_ID_PK</dfn>, <dfn>ISSUER_ID_SK</dfn>
       :: Public Key (PK) and Private Key (SK) related to the <a>ISSUER_ID</a>.

       :  <dfn>SP</dfn>
       :: <dfn>Service Provider</dfn> that verifies <a>VC</a>s.  In the
            Decentralized Identity community it is typically called
            Verifier. <a>Service Providers</a> use a <dfn>Service Provider Agent</dfn> to
            connect to the <a>DAP</a>, the <a>Credential Broker</a> and the <a>Identity Escrow</a>.

       :  <dfn>SP_ID</dfn>
       :: Service Provider IDentity, i.e. the <a>DID</a> style identifier for the <a>SP</a>.

       :  <dfn>SP_ID_PK</dfn>, <dfn>SP_ID_SK</dfn>
       :: Public Key (PK) and Private Key (SK) related to the <a>SP_ID</a>.

       : <dfn>TA</dfn>
       :: <dfn>Trust Anchor</dfn>, i.e. a randomly generated number related to a User. E.g. 3456893265abf...849287c.


   Issue: Why do we need the TA?  It doesn't directly appear in any sequence diagram so far.


       :  <dfn>TA_USER_ISSUER</dfn>
       :: The <a>Issuer</a> specific <a>TA</a>, i.e. hash(<a>TA</a>, <a>ISSUER_ID</a>).

       :  <dfn>User</dfn>
       :: The User and owner of the <a>DA</a> and holder of the <a>VC</a>s.

       : <dfn>USER_FIDO_PK</dfn>, <dfn>USER_FIDO_SK</dfn>
       :: The FIDO credential owned by the user's authenticator and used
           to authenticator to <a>DAP</a> and <a>Cloud Agent</a>.

       :  <dfn>VC</dfn>
       :: <dfn>Verifiable Credential</dfn>, see [[!vc-data-model]].

       :  <dfn>VC_METADATA</dfn>
       :: Metadata of a <a>VC</a>, i.e. <a>DID</a>, VC Schema Name, VC Schema Friendly Name

   </dl>







# Inter-domain Communication # {#sctn-interd-comm}

## Communication Protocol ## {#sctn-communication-protocol}

In general, DIDcomm [[!didcomm-messaging]] is used for securing the communication
between the entities.

The communication between <a>SP</a>s, <a>Issuer</a>s, <a>DAP</a>s, and <a>GADI</a>
itself uses "Sender Authenticated Encryption".
The <a>SP_ID_PK</a>, <a>SP_ID_SK</a>, <a>ISSUER_ID_PK</a>, <a>ISSUER_ID_SK</a>, <a>DAP_ID_PK</a>,
<a>DAP_ID_SK</a> and <a>GADI_ID_PK</a> and <a>GADI_ID_SK</a> are being used for that.

## Issuer to DAP ## {#sctn-interd-comm-issuer-to-dap}

Issue: Add details for Issuer to DAP communications

## DAP to DAP (Future) ## {#sctn-interd-comm-dap-to-dap}

Issue: Add details for DAP to DAP communications

## DAP to GADI Regional Directory ## {#sctn-interd-comm-dap-to-gadi-regional}

Issue: Add details for DAP to GADI Regional Directory

## GADI Regional Directory to GADI Global ## {#sctn-interd-comm-gadi-reg-to-gadi-global}

Issue: Add details for GADI Regional Directory to GADI Global



# Security Considerations # {#sctn-security-considerations}

## Storage of Trust Anchor and Digital Address## {#sctn-storage-ta-da}

Issue: Details for Trust Anchor and Digital Address Storage


## Recovery of Trust Anchor and Digital Address ## {#sctn-recovery-trust-anchor}

Issue: Details for Trust Anchor Recovery

## Cryptographic Suites ## {#sctn-cryptographic-suite}

Issue: Details for Cryptographic Suites


# Operations # {#sctn-ops}

## Onboarding Entities ## {#sctn-opts-onboarding}

### Onboarding as an Issuer ### {#sctn-onboarding-as-Issuer}

<figure id="fig-onboarding-issuer-to-dap">
    <img src="sequence-diagrams/Onboarding-Issuer-to-DAP.png"/>
    <figcaption>Onboarding Issuer to a DAP</figcaption>
</figure>

### Onboarding as a Service Provider ### {#sctn-onboarding-as-serviceprovider}

<figure id="fig-onboarding-sp-to-dap">
    <img src="sequence-diagrams/Onboarding-SP-to-DAP.png"/>
    <figcaption>Onboarding SP to DAP</figcaption>
</figure>

### Onboarding as a DAP ### {#sctn-onboarding-as-DAP}

<figure id="fig-onboarding-dap-to-regional-gadi">
    <img src="sequence-diagrams/Onboarding-DAP-to-Regional-GADI.png"/>
    <figcaption>Onboarding DAP to Regional GADI</figcaption>
</figure>

### Onboarding as GADI Regional Directory ### {#sctn-onboarding-as-GADI-regional}

<figure id="fig-onboarding-regional-gadi-to-gadi">
    <img src="sequence-diagrams/Onboarding-GADI-Regional-to-GADI.png"/>
    <figcaption>Onboarding Regional GADI to GADI</figcaption>
</figure>


## Digital Address Issuance ## {#sctn-digital-address-issuance}

Users may approach Trusted Issuers to create a Digital Address or issuers may initiate the process of creating a Digital Address for a user prior to issuing a Verifiable Credential.
A Digital Address creation starts with the collection of identity attributes from the User, creation of a unique trust anchor and ensuring that the Digital Address is unique
to in the given scope.

Please refer to the [[#sctn-trust-anchor]] and [[#sctn-digital-address]] sections for more details.

### User Onboarding to First Issuer ### {#sctn-onboarding-1st-issuer}

<figure id="fig-onboarding-1st-issuer">
    <img src="sequence-diagrams/User-onboarding-to-first-issuer.png"/>
    <figcaption>User Onboarding to First Issuer</figcaption>
</figure>

Note: <a>HIDA</a> is PII and might need to be erased on account deletion (see User <a>DAP</a> Account Deletion)

Issue: Check <a>DAP_USER_ID_PK</a>/<a>DAP_USER_ID_SK</a> generation. Would we store the PK in <a>HomeDAP</a> or GADI??  When will that key be created and by Whom?

### User Onboarding Attempt to 2nd Issuer ### {#sctn-onboarding-2nd-issuer}

<figure id="fig-onboarding-2nd-issuer">
    <img src="sequence-diagrams/User-onboarding-to-second-issuer.png"/>
    <figcaption>User Onboarding to Second Issuer</figcaption>
</figure>

Issue: This representation is not correct. There is no TA_USER_ISSUER in the <a>GADI Global Directory</a>. This information is at the GADI Regional Directory only.

Issue: This opens the possibility to create multiple Digital Addresses for the same user in multiple regions.



## User Home DAP ## {#sctn-user-home-dap-agency}

Home DAP is the entity that serves as the primary repository of credential metadata for a given user. Each DAP has a unique Identifier (A DID and a Digital Address) in the GADI ecosystem.

When a Trusted Issuer creates a Digital Address for a User, the Digital Address is suffixed with the DAP Identifier. Any entity in the ecosystem can use a Digital Address resolver to identify the Home DAP for a given User. Credential requests, issuance or verifications, are routed to the Home DAP for further processing.

There are two possible scenarios to depict the role of a Home DAP as below:

### Issuers in the same DAP ### {#sctn-user-home-dap-agency-scenario1}
There are two issuers in this scenario, both as part of the same DAP. Digital Addresses created are published to the DAP and credential metadata and lookups are maintained by the DAP.
<figure id="fig-user-home-dap-agency-scenario1">
    <img src="sequence-diagrams/Home-DAP-Agency-Issuers-in-the-same-DAP-Agency.svg"/>
    <figcaption>Home DAP - Issuers in the same DAP</figcaption>
</figure>


### Issuers in separate DAP Agencies ### {#sctn-user-home-dap-agency-scenario2}
In this scenario, the Digital Addresses created are published to the DAP and it is designated as the Home DAP for the user. Credential metadata and look ups are  routed to the Home DAP from Issuers in other Interchanges.

<figure id="fig-user-home-dap-agency-scenario2">
    <img src="sequence-diagrams/Home-DAP-Agency-Issuers-in-the-Different-DAP Agency.svg"/>
    <figcaption>Home DAP - Issuers in separate DAP Agencies</figcaption>
</figure>

### User Changes Home-DAP ### {#sctn-user-changes-home-dap}
Users may choose to transfer their credential metadata to a different DAP. This is initiated with a submission of a transfer request. The transferee DAP initiates the transfer of Digital Address metadata and Credential metadata with the consent of the user. Subsequent requests for credential operations, are routed to the transferred DAP.
<figure id="fig-user-changes-home-dap">
    <img src="sequence-diagrams/DAP-Transfer-By-User.svg"/>
    <figcaption>Transfer DAP</figcaption>
</figure>



## Verifiable Credential Issuance ## {#sctn-vc-issuance-1}

### Issuer Initiated Issuance ### {#sctn-vc-issuance-issuer-initiated}

<figure id="fig-vc-issuance-option-1">
    <img src="sequence-diagrams/VC-Issuance-Option-1.svg"/>
    <figcaption>Verifiable Credential Issuance (Option 1)</figcaption>
</figure>

  <a>Issuer</a>s have access to <a>HIDA</a> and hence could ask GADI via <a>DAP</a> to lookup <a>TA_USER_ISSUER</a> by <a>HIDA</a>.

Issue: Explain what "Invite the Cloud  Agent for DIDcomm conn" mean in detail, i.e. which keys are involved, what kind of encryption/integrity protection method is used, any channel binding?, etc. [[!didcomm-messaging]].

Issue: Distinguish two different cases: (1) DA Issuer and VC Issuer are part of same DAP.
       (2) DA Issuer and VC Issuer are part of different DAP
       Agencies.  See github issue 53.


### User Initiated Issuance ### {#sctn-vc-issuance-user-initiated}

Issue: Description and sequence for user initiated Issuance


## Verifiable Credential Presentation and Verification ## {#sctn-vc-presentation-and-verification-1}

Goal of this operation is to provide some identity attributes related to the user with the Service Provider (<a>SP</a>).
  These attributes are include in the <a>verifiable credential</a> and have been verified by the <a>Issuer</a>.
  We always use <dfn>Verifiable Presentations</dfn> as defined by [[!vc-data-model]] (https://www.w3.org/TR/vc-data-model/#dfn-verifiable-presentations).

We distinguish 2 different types of <a>verifiable credential</a>s:
1. Credentials that include sufficient personal identifiable information to uniquely identify the user and
2. Credentials that don't. For example just stating that the user is older than 21.

In both cases, a public key is typically linked to the <a>verifiable credential</a> via the subject's DID document (see example 2 in [[did-core]]).
  It is used as a proxy for the user, meaning anyone that can proof access of the related private key is assumed to be the user.
  Consequently, in case (2), the public key - if it is included - will never appear publicly with a link to the user record. Instead, it will be a
  temporary use key, that is included in order to allow the <a>SP</a> to detect which subject the attributes relate to.

Issue: This is true for case 1, but how does it work in case 2?

<figure id="fig-vc-presentation-and-verification-option-1">
    <img src="sequence-diagrams/VC-Presentation-and-Verification-Option-1.svg"/>
    <figcaption>Verifiable Presentation and Verification (Option 1)</figcaption>
</figure>

Issue: For an anonymous verifiable presentation, we need to run some "join" protocol between the <a>DAA</a> and/or <a>Cloud Agent</a> and the <a>DAP</a>/GADI system.

Issue: Describe, how the <a>SP</a> can verify whether an <a>ISSUER_ID_PK</a> is trustworthy or not (introduced through the <a>DAP</a>).  And in the next step how to verify whether <a>DAP_ID_PK</a> is trustworthy or not.


## User Consents ## {#sctn-user-consents}


## Revoking a Verifiable Credential ## {#sctn-revoking-credential}


## Digital Address Recovery ## {#sctn-digital-address-recovery}

Users have the ability to recover a forgotten Digital Address in several ways such as, recovering from a backup device or a delegated recovery using other trusted third parties.

### Self-Recovery ### {#sctn-da-self-recovery}

One of the most common ways to recover a Digital Address is similar to the process of bootstrapping a new device. The User may either use an Issuer's online service
to provide Identity Attributes originally provided to generate the <a>HIDA</a>. The ID Proofing MUST be performed to validate the User's identity.

Please see [[#sctn-user-bootstraps-new-daa-instance-1]]

### Email based Recovery ### {#sctn-da-self-recovery-email}

Original Text - Abbie

1. DAP has acquired information at registration time to enable the user to recover the DA from the original issuer at DAP enrolment time. So the assumption here is that the DAP does have an email or sms for the user to help in the recovery.
2. user will do to dap and input email or number
3. dap will validate email on record (yes i have seen this email of number with the user
4. dap send a deep link email with user that will do the following
5. user click on email, it is send back to the
6. dap perform redirect to issuer
7. issuer re-validate user (either through re-enrolment of other means such as Voice matching, other app access, MNO validation, DL matching, Login with a trusted partner etc.)
8. Issuer direct back to DAP
9. Dap and issuer use DIDcom to confirm the transaction
10. DAP re-enrol user with FIDO

With this approach, the DAP has the option of skipping the DL scanning etc since
the issuer performs the identity vetting.


if user does not remember email other options can be used

1. do the DL flow as provided now
2. remind teh user of a list of possible issuer that may help it (aka see a drop list and see if any of the following issuers can help)
3. Issuers should implement a DAP recovery flow, basically re-enrol the user to the DAP (yes a DA exits but the flow will help the DAP to fido enable the user)


Issue: This seems to be a method to avoid ID Proofing with DAP.


### Delegated Recovery ### {#sctn-da-delegated-recovery}

Users can recover access to their prior credentials by either enabling a back up device or using one or more trusted delegatees
who also have a Digital Address.

#### Delegated Recovery with a Trusted Peer #### {#sctn-da-delegated-recovery-peer}

If the delegatee is a trusted person, such as a family member or a nominated friend, recovery of the Digital Address and credential metadata is possible
using a peer mode by directly scanning a QR code from the delegatee's device.


<figure id="fig-delegated-recovery-peer-mode">
    <img src="sequence-diagrams/Delegated-Recovery-Peer-Mode.png"/>
    <figcaption>Delegated Recovery Peer Mode</figcaption>
</figure>

Issue: Need more detail on the restored Assurance Level for the User and issued VCs. Does the user go back to the same Assurance Level as before?


#### Delegated Recovery with multiple delegatees #### {#sctn-da-delegated-recovery-multiple-peers}

The User may choose to nominate several delegatees. This is enabled with a recovery code generated by the DAP for the given transaction.
DAPs may enforce constraints to validate the acceptance criteria before granting access to the User's recovered metadata


<figure id="fig-delegated-recovery-multiple-Delegatees">
    <img src="sequence-diagrams/Delegated-Recovery-Multiple-Delegatees.png"/>
    <figcaption>Delegated Recovery Multiple Delegatees</figcaption>
</figure>

Issue: Need more detail on the restored Assurance Level for the User and issued VCs. Does the user go back to the same Assurance Level as before?


## User Device Management ## {#sctn-device-management}

### User Bootstraps Additional DAA Instance "New Phone" ### {#sctn-user-bootstraps-addtl-daa-instance-1}
The user got a new smartphone with the working <a>DAA</a>
instance.  This is about bootstrapping the new <a>DAA</a> on the additional
smartphone - <i>while still</i> having access to the old <a>DAA</a> instance.

<figure id="fig-user-bootstraps-addtl-daa-instance">
    <img src="sequence-diagrams/User-bootstrap-addtl-DAA-instance.svg"/>
    <figcaption>User Bootstraps Additional DAA Instance "New Phone"</figcaption>
</figure>

### User Bootstraps New DAA Instance "Lost Phone" ### {#sctn-user-bootstraps-new-daa-instance-1}

The user has lost his smartphone with the working <a>DAA</a> instance.
This is about bootstrapping the new <a>DAA</a> on the new smartphone -
<i>without</i> having access to the old <a>DAA</a> instance.

<figure id="fig-user-bootstraps-new-daa-instance">
    <img src="sequence-diagrams/User-bootstrap-new-DAA-instance.svg"/>
    <figcaption>User Bootstraps New DAA Instance "Lost Phone"</figcaption>
</figure>

Issue: requiring ID Proofing looks expensive here. Are there methods without that (that provide a similar security level)?

Issue: Do we want <a>DAP</a> to perform the ID proofing - not the <a>Issuer</a>?


### User Initiated Digital Address Creation (Remote) ### {#sctn-user-initiated-da-remote}

A user may initiate the creation of a Digital Address remotely, via an online service
provided by a Trusted Digital Address Issuer. The Issuer's service MUST follow procedures similar to the
in-person creation by request the Identity attributes from the User, generating the hashed attributes and verifying against
the GADI Regional Directory.

The online service of the Issuer MUST present the user with a QR code either online on its website or offline via an email or alternate service,
such that the User is capable of scanning the QR code containing their Digital Address information and initiating an Authenticating Binding processes
with the HomeDAP.

A successful authentication and binding to the HomeDAP's services should allow the user to use the <a>Digital Address</a> at the level of Assurance determined by the onboarding process.


<figure id="fig-user-initiated-da">
    <img src="sequence-diagrams/User-initiated-DA.png"/>
    <figcaption>User Initiated Digital Address Creation</figcaption>
</figure>

### User Initiated In-person Verification of Digital Address ### {#sctn-verify-user-initiated-da-remote}

The user may choose to visit a Verification Center in person to upgrade the Assurance Level
initially assigned by the system. An in-person verification may include a manual review/ verification
of the identity documents by a certified operator before indicating to the DAP about the genuineness of the subject.

The DAP may independently request the user to authenticate before upgrading the User's Assurance Level.

<figure id="fig-verify-user-initiated-da">
    <img src="sequence-diagrams/Verify-user-initiated-DA.png"/>
    <figcaption>User Initiated Digital Address Verification</figcaption>
</figure>


## Minimum ID Proofing Level ## {#sctn-user-bootstraps-min-id-proofing-level}

Issue: Description/ sequence diagram for  Minimum ID Proofing Level

## User Account Deletion ## {#sctn-user-account-deletion}

The User acquires the <a>Digital Address</a> and Verifiable Credentials through their lifetime in the GADI ecosystem. Relationships of the User with other entities, such as
Issuers and Service Providers are maintained by the DAP. In some cases however, the User may choose to terminate their relationship with a DAP
or the GADI ecosystem entirely. The cases below describe process to initiate the dissociation of a User with their DAPs.


### User Initiated Account Deletion ### {#sctn-user-account-deletion-user-initiated}

<figure id="fig-user-initiated-account-deletion">
    <img src="sequence-diagrams/User-Initiated-Account-Deletion.png"/>
    <figcaption>User Initiated Account Deletion</figcaption>
</figure>

Issue: Is it expected that <a>Issuer</a> relations are not deleted?  Maybe <a>DAP</a> Account deletion should be just a part of <a>Issuer</a> account deletion?

Note: I have added this as an optional step in the sequence diagram. My personal opinion is that all issuers that have issued non-expired VCs MUST be notified. Whether they act or not in
deleting the VC from their local storage is defined by Governance and retentional policies defined by the Issuers themselves

Issue: Do we need an issuer-triggered account deletion function as well?

Note: Yes - Added it


Issue: Is it expected that VCs are not deleted?

Note: Must be defined by Governance and Issuer retention policies



### User Initiated Account Deletion without DAA ### {#sctn-user-account-deletion-user-initiated-no-daa}

The use of DAA is not mandatory to initiate the deletion of <a>Digital Address</a>. There are alternate methods to initiate the process using,for example,
* an online portal hosted by the DAP
* a Kiosk managed by a DAP or a Trusted Issuer on behalf of the DAP for SmartCard holders
* an assisted Customer Service method from a Certified GADI Verification Center

<figure id="fig-user-initiated-account-deletion-no-daa">
    <img src="sequence-diagrams/User-Initiated-Account-Deletion-No-DAA.png"/>
    <figcaption>User Initiated Account Deletion without DAA</figcaption>
</figure>


Issue: How could a user without a working <a>DAA</a> instance trigger account deletion?
Need to elaborate on each of these services either here or in a separate document.


### Issuer Initiated Account Deletion ### {#sctn-user-account-deletion-issuer-initiated}

The Issuer may initiate a <a>Digital Address</a> that is not completely claimed by the User. This would be in case of an error by the Issuer or the User's desire not to
be part of the GADI ecosystem.

In such cases, an Issuer may initiate deletion of the <a>Digital Address</a> only if:
* The Issuer is the Digital Address Issuer
* There is no binding of the user to the <a>Digital Address</a> i.e No FIDO keys associated with the <a>Digital Address</a> on the DAP.
* There are no Verifiable Credentials issued to the <a>Digital Address</a>
* There is no Credential Metadata on the DAP

<figure id="fig-issuer-initiated-account-deletion">
    <img src="sequence-diagrams/Issuer-Initiated-Account-Deletion.png"/>
    <figcaption>Issuer Initiated Account Deletion</figcaption>
</figure>



Issue: Description/ sequence diagram for  Issuer Initiated Account Deletion




## Backup and Recovery ## {#sctn-user-backup-and-recovery}

Issue: Description/ sequence diagram for  Backup and Recovery



# Data Schema # {#sctn-data-schema}

## Entity Model ## {#sctn-data-schema-entitymodel}

The following diagram depicts a logical view of an entity in GADI.

* An Entity are Organization, Person or a Device.
* Entities are associated with other parties through relationships and a role.
* <a>Digital Address</a> is associated with one Entity.
* A <a>Digital Address</a> is associated with one and only one Trust Anchor


<figure id="fig-data-schema-partymodel">
    <img src="resources/data_model/entity-data-model.png"/>
    <figcaption>Entity Model</figcaption>
</figure>

## Data Residency ## {#sctn-data-schema-dataresidency}

<figure id="fig-data-schema-dataresidency">
    <img src="resources/data_model/data-residency.png"/>
    <figcaption>Metadata Residency</figcaption>
</figure>



## <dfn>DigitalAddress</dfn> ## {#sctn-data-schema-digitaladdress}
<table class="data longlastcol">
  <thead>
    <th>Name</th>
    <th>Type</th>
    <th>Description</th>
  </thead>
  <tbody>
  <tr>
    <td>ENTITY_ID</td>
    <td>String</td>
    <td>DID of the entity</td>
  </tr>
  <tr>
    <td>ENTITY_DIGITAL_ADDRESS</td>
    <td>String</td>
    <td>Digital Address aka the user friendly mnemonic</td>
  </tr>
    <tr>
      <td>ENTITY_ROLE</td>
      <td>Enum</td>
      <td>
        <ul>
          <li>Issuer</li>
          <li>ServiceProvider</li>
          <li>DAP</li>
          <li>RegionalDirectory</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>PRIMARY_HASH</td>
      <td>String</td>
      <td></td>
    </tr>
    <tr>
      <td>SECONDARY_HASH</td>
      <td>String</td>
      <td></td>
    </tr>
    <tr>
      <td>ISSUER_ID</td>
      <td>String</td>
      <td>DID of the Issuing entity</td>
    </tr>
    <tr>
      <td>ISSUER_DA</td>
      <td>String</td>
      <td>Digital Address of the Issuing entity</td>
    </tr>
    <tr>
      <td>CONSENT_IND</td>
      <td>Boolean</td>
      <td>Indicator whether the Digital Address creation was consented</td>
    </tr>
    <tr>
      <td>CONSENTED_BY</td>
      <td>String</td>
      <td>DID of the consenting entity</td>
    </tr>
    <tr>
      <td>CONSENTED_DATE</td>
      <td>String</td>
      <td>ISO 8601 format</td>
    </tr>
    <tr>
      <td>ASSURANCE_LEVEL</td>
      <td>Enum</td>
      <td>
        <ul>
          <li>U-AL1</li>
          <li>U-AL2</li>
          <li>U-AL3</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>STATUS</td>
      <td>Enum</td>
      <td>
        <ul>
          <li>Active</li>
          <li>Pending </li>
          <li>Inactive</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>CREATED_BY</td>
      <td>String</td>
      <td>DID of the creator - person or entity</td>
    </tr>
    <tr>
      <td>CREATE_DATE</td>
      <td>DateTime</td>
      <td>ISO 8601 format</td>
    </tr>
  </tbody>
</table>

## Credential Metadata ## {#sctn-credential-metadata}

<table class="data longlastcol">
  <thead>
    <th>Name</th>
    <th>Type</th>
    <th>Description</th>
  </thead>
  <tbody>
  <tr>
    <td>ENTITY_ID</td>
    <td>String</td>
    <td>DID of the entity</td>
  </tr>
  <tr>
    <td>ENTITY_DIGITAL_ADDRESS</td>
    <td>String</td>
    <td><a>Digital Address</a> aka the user friendly mnemonic</td>
  </tr>
    <tr>
      <td>ISSUER_ID</td>
      <td>String</td>
      <td>DID of the Issuing entity</td>
    </tr>
    <tr>
      <td>ISSUER_DA</td>
      <td>String</td>
      <td><a>Digital Address</a> of the Issuing entity</td>
    </tr>
    <tr>
      <td>CREDENTIAL_SCHEMA_ID</td>
      <td>String</td>
      <td>Identifier of the Credential Schema against which the VC was issued</td>
    </tr>
    <tr>
      <td>CREDENTIAL_SCHEMA_VERSION</td>
      <td>String</td>
      <td>Version of the Credential Schema against which the VC was issued</td>
    </tr>
    <tr>
      <td>CREDENTIAL_TYPE</td>
      <td>String</td>
      <td>
        <ul>
          <li>Identity Credential</li>
          <li>Data Credential</li>
          <li>...</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>ASSURANCE_LEVEL</td>
      <td>Enum</td>
      <td>
        <ul>
          <li>VC-AL1</li>
          <li>VC-AL2</li>
          <li>VC-AL3</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>STATUS</td>
      <td>Enum</td>
      <td>
        <ul>
          <li>Active</li>
          <li>Pending </li>
          <li>Inactive</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>CREATED_BY</td>
      <td>String</td>
      <td>DID of the creator - person or entity</td>
    </tr>
    <tr>
      <td>CREATE_DATE</td>
      <td>DateTime</td>
      <td>ISO 8601 format</td>
    </tr>
  </tbody>
</table>

## Verifiable Credential Schema ## {#sctn-vc-schema}

Issue: Description/ sequence diagram for Verifiable Credential Schema



# Credential Broker (Future) # {#sctn-credential-broker}

Issue: Description/ sequence diagram for Credential Broker

# Identity Escrow (Future) # {#sctn-identity-escrow}

Issue: Description/ sequence diagram for Identity Escrow

# Payment Broker (Future) # {#sctn-payment-broker}

Issue: Description/ sequence diagram for Payment Broker


# Certification # {#sctn-certification}

## DAP Certification ## {#sctn-certification-dap}

Issue: Description/ sequence diagram for DAP Certification


## Digital Address Issuer Certification ## {#sctn-certification-da-issuer}

Issue: Description/ sequence diagram for Digital Address Issuer Certification

## Credential Issuer Certification ## {#sctn-certification-credential-issuer}

Issue: Description/ sequence diagram for Credential Issuer Certification

## Identity Escrow Certification ## {#sctn-certification-identity-escrow}

Issue: Description/ sequence diagram for Identity Escrow Certification

## Payment Broker Certification ## {#sctn-certification-payment-broker}

Issue: Description/ sequence diagram for Payment Broker Certification



# API # {#sctn-gadi-api}

  <pre class=include>
  path: resources/api/GADI-global-api.include
  </pre>

  <pre class=include>
  path: resources/api/GADI-regional-api.include
  </pre>

  <pre class=include>
  path: resources/api/DAP-agency-api.include
  </pre>

  <pre class=include>
  path: resources/api/Issuer-api.include
  </pre>

  <pre class=include>
  path: resources/api/API-objects.include
  </pre>





# Appendix

## Acknowledgments ## {#sctn-acknowledgments}

The DID Alliance (DIDA) is an open industry association created to drive the development of a standardized, interoperable framework for decentralized identity services to ensure the authenticity of and establish trust in digital identities.

### Major Contributors ### {#sctn-acknowledgments-contributors}

* Abbie Barbir, BarbirA@cvshealth.com
* Jason Burnett, jason@digitaltrust.net
* Ken Ebert, ken@indicio.tech
* Sam Curren, sam@indicio.tech


### Other Contributors and Reviewers ### {#sctn-acknowledgments-Reviewers}

* Alan Bachmann, AABachmann@aetna.com
* Tina Srivastava, tinaps@badgeinc.com
* Raju Nadakuduty, perraju.nadakuduty@capitalone.com

If a credit is missing from the credit list below, please log a ticket at GitHub to be recognized in future updates.
